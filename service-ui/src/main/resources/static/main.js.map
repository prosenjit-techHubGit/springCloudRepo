{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-navigation/app-navigation.component.css","webpack:///./src/app/app-navigation/app-navigation.component.html","webpack:///./src/app/app-navigation/app-navigation.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/assignment-details/assignment-details.component.css","webpack:///./src/app/assignment-details/assignment-details.component.html","webpack:///./src/app/assignment-details/assignment-details.component.ts","webpack:///./src/app/assignment-list/assignment-list-datasource.ts","webpack:///./src/app/assignment-list/assignment-list.component.css","webpack:///./src/app/assignment-list/assignment-list.component.html","webpack:///./src/app/assignment-list/assignment-list.component.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/dashbaord/dashbaord.component.css","webpack:///./src/app/dashbaord/dashbaord.component.html","webpack:///./src/app/dashbaord/dashbaord.component.ts","webpack:///./src/app/employee-create/employee-create.component.css","webpack:///./src/app/employee-create/employee-create.component.html","webpack:///./src/app/employee-create/employee-create.component.ts","webpack:///./src/app/employee-data.service.ts","webpack:///./src/app/employee-details/employee-details.component.css","webpack:///./src/app/employee-details/employee-details.component.html","webpack:///./src/app/employee-details/employee-details.component.ts","webpack:///./src/app/employee-list/employee-list.component.css","webpack:///./src/app/employee-list/employee-list.component.html","webpack:///./src/app/employee-list/employee-list.component.ts","webpack:///./src/app/employee-list/employee-table-datasource.ts","webpack:///./src/app/employee.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.sidenav .mat-toolbar {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\">\\n    <mat-toolbar>Menu</mat-toolbar>\\n    <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"/home\\\">Home</a>\\n      <a mat-list-item routerLink=\\\"/employee\\\">Employee</a>\\n      <a mat-list-item routerLink=\\\"/assignment\\\">Assignment</a>\\n      <a mat-list-item routerLink=\\\"/login\\\">Login</a>\\n      <a mat-list-item href=\\\"#\\\">Other</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>World of Microservices</span>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>\\n  </mat-sidenav-content>\\n</mat-sidenav-container>\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-app-navigation',\n  templateUrl: './app-navigation.component.html',\n  styleUrls: ['./app-navigation.component.css'],\n})\nexport class AppNavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { AssignmentListComponent } from './assignment-list/assignment-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n\n  \n  {\n    path: \"\",\n    component: HomeComponent\n\n  }, \n\n  {\n    path: \"employee\",\n    component: EmployeeDetailsComponent,\n    canActivate:[AuthGuard]\n\n  },\n  {\n    path: \"assignment\",\n    component: AssignmentListComponent,\n    canActivate:[AuthGuard]\n\n  },\n  {\n    path: \"login\",\n    component: LoginComponent\n   \n\n  },\n\n  {\n    path: \"home\",\n    component: HomeComponent\n\n  }\n\n\n]\n\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [ RouterModule.forRoot(routes) ]\n})\n\n\n\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-app-navigation></app-app-navigation>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, Injectable } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppNavigationComponent } from './app-navigation/app-navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatInputModule,MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatTableModule, MatPaginatorModule, MatSortModule, MatGridListModule, MatCardModule, MatMenuModule,MatFormFieldModule } from '@angular/material';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { AssignmentDetailsComponent } from './assignment-details/assignment-details.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { DashbaordComponent } from './dashbaord/dashbaord.component';\nimport { HttpClientModule,HttpHeaders,HttpClient, HttpInterceptor, HttpHandler }    from '@angular/common/http';\nimport { EmployeeDataService } from './employee-data.service';\nimport { AssignmentListComponent } from './assignment-list/assignment-list.component';\nimport { EmployeeCreateComponent } from './employee-create/employee-create.component';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { AuthGuard } from './auth.guard';\nimport { HomeComponent } from './home/home.component';\nimport { HttpRequest } from 'selenium-webdriver/http';\nimport { CommonModule } from '@angular/common';\n\n\n\n/*const appRoutes: Routes = [\n  { path: 'employee', component: EmployeeDetailsComponent },\n  { path: 'assignment', component: AssignmentDetailsComponent }\n  \n];*/\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AppNavigationComponent,\n    EmployeeDetailsComponent,\n    AssignmentDetailsComponent,   \n    EmployeeListComponent,\n    DashbaordComponent,\n    AssignmentListComponent,\n    EmployeeCreateComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,    \n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    AppRoutingModule,\n    CommonModule\n  \n  ],\n  providers: [HttpClient,EmployeeDataService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","module.exports = \"\"","module.exports = \"<p>\\n  assignment-details works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-assignment-details',\n  templateUrl: './assignment-details.component.html',\n  styleUrls: ['./assignment-details.component.css']\n})\nexport class AssignmentDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface AssignmentListItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: AssignmentListItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the AssignmentList view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class AssignmentListDataSource extends DataSource<AssignmentListItem> {\n  data: AssignmentListItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<AssignmentListItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginator's length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: AssignmentListItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: AssignmentListItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \".full-width-table {\\n  width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n  <mat-paginator #paginator\\n      [length]=\\\"dataSource.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { AssignmentListDataSource } from './assignment-list-datasource';\n\n@Component({\n  selector: 'app-assignment-list',\n  templateUrl: './assignment-list.component.html',\n  styleUrls: ['./assignment-list.component.css'],\n})\nexport class AssignmentListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: AssignmentListDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new AssignmentListDataSource(this.paginator, this.sort);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _authService: AuthService, private _router: Router) { }\n\n  canActivate(): boolean {\n\n    if (this._authService.loggedIn()) {\n      return true;\n\n    } else {\n\n      this._router.navigate(['/login'])\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { finalize } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Userinfo } from './userinfo';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  userInfo:Userinfo;\n  userName:string;\n  isAutheticated: boolean;\n  constructor(private httpClient: HttpClient) { \n    this.autheticate();\n\n  }\n\n  loggedIn(): boolean {\n\n    return this.isAutheticated;\n\n  }\n\n  autheticate() {\n\n    this.httpClient.get(\"/suite/user\").\n    subscribe(response => { if (response['name']) { this.isAutheticated = true ;this.getUserInfo() } else { this.isAutheticated = false }},\n    ()=> {this.isAutheticated = false});\n\n  }\n\n  authenticateHttpBasic(credentials, callback) {\n\n    const headers = new HttpHeaders(credentials ? {\n        authorization : 'Basic ' + btoa(credentials.username + ':' + credentials.password)\n    } : {});\n\n    this.httpClient.get('/suite/user', {headers: headers}).subscribe(response => {\n        if (response['name']) {\n          this.isAutheticated = true;\n          this.userName=response['name']\n        } else {\n          this.isAutheticated = false;\n        }\n        return callback && callback();\n    });\n  }  \n\n  logout(): Observable<Object> {\n    return this.httpClient.post('logout', {}).pipe(finalize(() => {\n        this.isAutheticated = false;\n    }))\n}\n\n getUserInfo(){\n\n    this.httpClient.get(\"/suite/userInfo\").\n   subscribe(response => this.userName=response['name'])\n } \n\n getUserName():String{\n\n  return this.userName\n }\n\n\n\n}\n","module.exports = \".grid-container {\\n  margin: 20px;\\n}\\n\\n.dashboard-card {\\n  position: absolute;\\n  top: 15px;\\n  left: 15px;\\n  right: 15px;\\n  bottom: 15px;\\n}\\n\\n.more-button {\\n  position: absolute;\\n  top: 5px;\\n  right: 10px;\\n}\\n\\n.dashboard-card-content {\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"grid-container\\\">\\n  <h1 class=\\\"mat-h1\\\">Dashboard</h1>\\n  <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"350px\\\">\\n    <mat-grid-tile *ngFor=\\\"let card of cards | async\\\" [colspan]=\\\"card.cols\\\" [rowspan]=\\\"card.rows\\\">\\n      <mat-card class=\\\"dashboard-card\\\">\\n        <mat-card-header>\\n          <mat-card-title>\\n            {{card.title}}\\n            <button mat-icon-button class=\\\"more-button\\\" [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Toggle menu\\\">\\n              <mat-icon>more_vert</mat-icon>\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\" xPosition=\\\"before\\\">\\n              <button mat-menu-item>Expand</button>\\n              <button mat-menu-item>Remove</button>\\n            </mat-menu>\\n          </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content class=\\\"dashboard-card-content\\\">\\n          <div>Card Content Here</div>\\n        </mat-card-content>\\n      </mat-card>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-dashbaord',\n  templateUrl: './dashbaord.component.html',\n  styleUrls: ['./dashbaord.component.css'],\n})\nexport class DashbaordComponent {\n  /** Based on the screen size, switch from standard to one column per row */\n  cards = this.breakpointObserver.observe(Breakpoints.Handset).pipe(\n    map(({ matches }) => {\n      if (matches) {\n        return [\n          { title: 'Card 1', cols: 1, rows: 1 },\n          { title: 'Card 2', cols: 1, rows: 1 },\n          { title: 'Card 3', cols: 1, rows: 1 },\n          { title: 'Card 4', cols: 1, rows: 1 }\n        ];\n      }\n\n      return [\n        { title: 'Card 1', cols: 2, rows: 1 },\n        { title: 'Card 2', cols: 1, rows: 1 },\n        { title: 'Card 3', cols: 1, rows: 2 },\n        { title: 'Card 4', cols: 1, rows: 1 }\n      ];\n    })\n  );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\"","module.exports = \"<div class=\\\"example-container\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"employee.email\\\"/>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"employee.name\\\"/>\\n  </mat-form-field>\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"addEmployee()\\\">ADD</button>\\n</div>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { EmployeeDataService } from '../employee-data.service';\n\n@Component({\n  selector: 'app-employee-create',\n  templateUrl: './employee-create.component.html',\n  styleUrls: ['./employee-create.component.css']\n})\nexport class EmployeeCreateComponent implements OnInit {\n  \n  employee: Employee;\n  constructor(private employeeDataService: EmployeeDataService) { }\n\n  ngOnInit() {\n    this.employee = new Employee(null,null,null,null,null);\n\n  }\n\n  addEmployee(){   \n\n    console.log(this.employee.email);\n    this.employeeDataService.AddEmployee(this.employee).subscribe(data => console.log(data), error => console.log(error));\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Employee } from './employee';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { EmployeeListItem } from './employee-list/employee-list-datasource';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeDataService {\n  \n  employeeServiceURL: String=\"\"\n\n  constructor(private httpClient: HttpClient ) { \n\n\n  }\n\n getAllemployees(): Observable<Array<Employee>> {\n   \n  // return this.httpClient.get<Array<Employee>>(\"http://localhost:5555/services/employee/all\") \n\n  return this.httpClient.get<Array<Employee>>(\"/suite/getAllEmployee\");\n  \n\n }\n\n AddEmployee(employee:Employee):Observable<Employee> {\n\n  const httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n     // 'Authorization': 'my-auth-token'\n    })\n  };\n  \n\n   return this.httpClient.post<Employee>(\"/suite/create\",employee,httpOptions);\n\n }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n Employee\\n</p>\\n<app-employee-list></app-employee-list>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".full-width-table {\\n  width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\" >\\n  <table mat-table class=\\\"full-width-table\\\" [dataSource]=\\\"dataSource\\\" aria-label=\\\"Elements\\\">\\n    <!-- Id Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef>Email</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.email}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef >Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\">{{row.name}}</td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  </table>\\n\\n <!-- <mat-paginator #paginator\\n      [length]=\\\"dataSource.data.length\\\"\\n      [pageIndex]=\\\"0\\\"\\n      [pageSize]=\\\"50\\\"\\n      [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n  </mat-paginator> -->\\n</div>\\n<h3>Add New Employee</h3>\\n<app-employee-create></app-employee-create>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { EmployeeListDataSource, EmployeeListItem } from './employee-list-datasource';\nimport { EmployeeDataService } from '../employee-data.service';\nimport { map } from 'rxjs/operators';\nimport { EmployeeTableDataSource } from './employee-table-datasource';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.css'],\n})\nexport class EmployeeListComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: EmployeeTableDataSource;\n  empData: EmployeeListItem[];\n  isLoading: boolean;\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['email', 'name'];\n\n  ngOnInit() {\n   \n    this.isLoading=true;\n    this.dataSource = new EmployeeTableDataSource(this.employeeSataService);\n\n   // this.employeeSataService.getAllemployees().subscribe(data =>{ console.log(data);this.empData = data,this.isLoading=false}, error => console.log(error));\n\n\n\n    /*if (this.empData) {\n      this.dataSource = new EmployeeListDataSource(this.paginator, this.sort, this.empData);\n    } else\n    {\n\n      this.empData= [\n        { email: \"email\", name: 'Hydrogen', phone: \"24234\", department: \"\", manager: \"\" },\n        { email: \"email\", name: 'Helium', phone: \"234324\", department: \"\", manager: \"\" }\n    \n      ];\n\n      this.dataSource = new EmployeeListDataSource(this.paginator, this.sort,this.empData);\n    } */\n\n\n  }\n\n  constructor(private employeeSataService: EmployeeDataService) { }\n\n\n}\n","import { DataSource } from \"@angular/cdk/table\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Employee } from \"../employee\";\r\nimport { EmployeeDataService } from \"../employee-data.service\";\r\n\r\nexport class EmployeeTableDataSource extends DataSource<Employee> {\r\n    \r\n    constructor(private employeeDataService: EmployeeDataService){\r\n      super()\r\n\r\n    }\r\n\r\n    connect():Observable<Employee[]>{\r\n\r\n        return this.loadEmployees();\r\n    }\r\n\r\n    disconnect():void{\r\n\r\n\r\n    }\r\n\r\n    loadEmployees():Observable<Employee[]>{\r\n        return this.employeeDataService.getAllemployees()\r\n\r\n    }\r\n\r\n   \r\n\r\n\r\n}","export class Employee {\n\n    name: String;\n    email: String;\n    phone: String;\n    department: String;\n    manager: String;\n\n\n\n    constructor(name: String, email: String, phone: String, department: String, manager: String) {\n\n        this.name = name;\n        this.email = email;\n        this.phone = phone;\n        this.department = department;\n        this.manager = manager;\n    }\n\n    \n\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\"","module.exports = \"\\n\\n<!-- <ng-container *ngIf=\\\"isAuthenticated\\\">\\n<div class=\\\"example-container\\\">\\n<button mat-button color=\\\"primary\\\"  (click)=\\\"logout()\\\">Log out</button>\\n</div>\\n</ng-container> -->\\n<ng-container *ngIf=\\\"isAuthenticated()\\\">\\n<mat-card *ngIf=\\\"isAuthenticated()\\\" class=\\\"login-card\\\">\\n    <mat-card-header>\\n        <mat-card-title>Welcome, {{getuserInfo()}} </mat-card-title>\\n    </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"example-container\\\">\\n              <p></p>\\n                \\n              </div>\\n              \\n              <mat-card-actions>\\n              <!-- <button mat-button color=\\\"primary\\\"  (click)=\\\"loginOauth()\\\">Login with Facebook</button> -->\\n              <button mat-raised-button color=\\\"accent\\\" (click)=\\\"logout()\\\">Log out</button>\\n              \\n            </mat-card-actions>  \\n          \\n\\n        </mat-card-content>\\n   </mat-card>\\n  </ng-container>   \\n\\n\\n\\n<ng-container *ngIf=\\\"!isAuthenticated()\\\">\\n    <app-login></app-login>\\n</ng-container>\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  isAutheticated: boolean;\n  userName: String;\n\n  constructor(private _authService: AuthService) {\n\n\n  }\n\n  ngOnInit() {\n    \n  }\n\n  logout() {\n    this._authService.logout().subscribe(data => this.isAutheticated = false);\n\n  }\n\n  isAuthenticated(){\n    return this._authService.loggedIn();\n  }\n  \n  getuserInfo(){\n    if (this.isAuthenticated()) {\n      return this._authService.getUserName()\n    } else \n\n    return \"anonymous\"\n  } \n\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n  \\r\\n  .example-container > * {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-button-row button,\\r\\n.example-button-row a {\\r\\n  margin-right: 8px;\\r\\n}\"","module.exports = \"\\n<ng-container *ngIf=\\\"!loggedIn()\\\">\\n<mat-card  class=\\\"login-card\\\">\\n    <mat-card-header>\\n        <mat-card-title>Login</mat-card-title>\\n    </mat-card-header>\\n        <mat-card-content>\\n            <div class=\\\"example-container\\\">\\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"credentials.username\\\" />\\n                </mat-form-field>\\n              \\n                <mat-form-field>\\n                  <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"credentials.password\\\">\\n                </mat-form-field>\\n                \\n              </div>\\n              \\n              <mat-card-actions>\\n              <!-- <button mat-button color=\\\"primary\\\"  (click)=\\\"loginOauth()\\\">Login with Facebook</button> -->\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"loginHttp()\\\">Login</button>\\n              \\n            </mat-card-actions>  \\n          \\n\\n        </mat-card-content>\\n   </mat-card>\\n </ng-container>\\n <ng-container  *ngIf=\\\"loggedIn()\\\">  \\n  <p>Welcome, {{getUserName()}} </p>\\n  </ng-container>\\n   <div class=\\\"example-container\\\">\\n   <a mat-raised-button  href=\\\"login/facebook\\\" color=\\\"primary\\\" >Sign in with Facebook</a>\\n   <a mat-raised-button  href=\\\"login\\\" color=\\\"primary\\\" >Basic Login</a>\\n   </div>\\n   \"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  credentials = { username: '', password: '' };\n  constructor(private _authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  loginHttp() {\n\n    console.log(this.credentials);\n    console.log(this.credentials.username);\n    console.log(this.credentials.password);\n    this._authService.authenticateHttpBasic(this.credentials, () => {\n      this.router.navigateByUrl('/');\n    });\n    \n  }\n\n  loggedIn():boolean{\n    return this._authService.loggedIn()\n\n  }\n\n  getUserName():String {\n    return this._authService.getUserName()\n\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}